{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/platform-browser\";\nexport class BypassSecurityComponent {\n  constructor(sanitizer) {\n    this.sanitizer = sanitizer;\n    // javascript: URLs are dangerous if attacker controlled.\n    // Angular sanitizes them in data binding, but you can\n    // explicitly tell Angular to trust this value:\n    this.dangerousUrl = 'javascript:alert(\"Hi there\")';\n    this.trustedUrl = sanitizer.bypassSecurityTrustUrl(this.dangerousUrl);\n    this.updateVideoUrl('PUBnlbjZFAI');\n  }\n  updateVideoUrl(id) {\n    // Appending an ID to a YouTube URL is safe.\n    // Always make sure to construct SafeValue objects as\n    // close as possible to the input data so\n    // that it's easier to check if the value is safe.\n    this.dangerousVideoUrl = 'https://www.youtube.com/embed/' + id;\n    this.videoUrl = this.sanitizer.bypassSecurityTrustResourceUrl(this.dangerousVideoUrl);\n  }\n}\nBypassSecurityComponent.ɵfac = function BypassSecurityComponent_Factory(t) {\n  return new (t || BypassSecurityComponent)(i0.ɵɵdirectiveInject(i1.DomSanitizer));\n};\nBypassSecurityComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: BypassSecurityComponent,\n  selectors: [[\"app-bypass-security\"]],\n  decls: 22,\n  vars: 5,\n  consts: [[1, \"e2e-dangerous-url\", 3, \"href\"], [1, \"e2e-trusted-url\", 3, \"href\"], [\"width\", \"640\", \"height\", \"390\", 1, \"e2e-iframe-trusted-src\", 3, \"src\"], [\"width\", \"640\", \"height\", \"390\", 1, \"e2e-iframe-untrusted-src\", 3, \"src\"]],\n  template: function BypassSecurityComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"h3\");\n      i0.ɵɵtext(1, \"Bypass Security Component\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(2, \"h4\");\n      i0.ɵɵtext(3, \"An untrusted URL:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(4, \"p\")(5, \"a\", 0);\n      i0.ɵɵtext(6, \"Click me\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(7, \"h4\");\n      i0.ɵɵtext(8, \"A trusted URL:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(9, \"p\")(10, \"a\", 1);\n      i0.ɵɵtext(11, \"Click me\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(12, \"h4\");\n      i0.ɵɵtext(13, \"Resource URL:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(14, \"p\");\n      i0.ɵɵtext(15);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(16, \"p\");\n      i0.ɵɵtext(17, \"Trusted:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(18, \"iframe\", 2);\n      i0.ɵɵelementStart(19, \"p\");\n      i0.ɵɵtext(20, \"Untrusted:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(21, \"iframe\", 3);\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"href\", ctx.dangerousUrl, i0.ɵɵsanitizeUrl);\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"href\", ctx.trustedUrl, i0.ɵɵsanitizeUrl);\n      i0.ɵɵadvance(5);\n      i0.ɵɵtextInterpolate1(\"Showing: \", ctx.dangerousVideoUrl, \"\");\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"src\", ctx.videoUrl, i0.ɵɵsanitizeResourceUrl);\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"src\", ctx.dangerousVideoUrl, i0.ɵɵsanitizeResourceUrl);\n    }\n  },\n  encapsulation: 2\n});","map":{"version":3,"mappings":";;AAOA,OAAM,MAAOA,uBAAuB;EAMlCC,YAAoBC,SAAuB;IAAvB,cAAS,GAATA,SAAS;IAC3B;IACA;IACA;IACA,IAAI,CAACC,YAAY,GAAG,8BAA8B;IAClD,IAAI,CAACC,UAAU,GAAGF,SAAS,CAACG,sBAAsB,CAAC,IAAI,CAACF,YAAY,CAAC;IACrE,IAAI,CAACG,cAAc,CAAC,aAAa,CAAC;EACpC;EAEAA,cAAc,CAACC,EAAU;IACvB;IACA;IACA;IACA;IACA,IAAI,CAACC,iBAAiB,GAAG,gCAAgC,GAAGD,EAAE;IAC9D,IAAI,CAACE,QAAQ,GACT,IAAI,CAACP,SAAS,CAACQ,8BAA8B,CAAC,IAAI,CAACF,iBAAiB,CAAC;EAC3E;;AAvBWR,uBAAuB;mBAAvBA,uBAAuB;AAAA;AAAvBA,uBAAuB;QAAvBA,uBAAuB;EAAAW;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MCPpCC,0BAAI;MAAAA,yCAAyB;MAAAA,iBAAK;MAElCA,0BAAI;MAAAA,iCAAiB;MAAAA,iBAAK;MAC1BA,yBAAG;MAAmDA,wBAAQ;MAAAA,iBAAI;MAClEA,0BAAI;MAAAA,8BAAc;MAAAA,iBAAK;MACvBA,yBAAG;MAA+CA,yBAAQ;MAAAA,iBAAI;MAE9DA,2BAAI;MAAAA,8BAAa;MAAAA,iBAAK;MACtBA,0BAAG;MAAAA,aAA8B;MAAAA,iBAAI;MACrCA,0BAAG;MAAAA,yBAAQ;MAAAA,iBAAI;MACfA,6BAA0F;MAC1FA,0BAAG;MAAAA,2BAAU;MAAAA,iBAAI;MACjBA,6BAAqG;;;MATrEA,eAAqB;MAArBA,yDAAqB;MAEvBA,eAAmB;MAAnBA,uDAAmB;MAG9CA,eAA8B;MAA9BA,6DAA8B;MAE+BA,eAAgB;MAAhBA,4DAAgB;MAEdA,eAAyB;MAAzBA,qEAAyB","names":["BypassSecurityComponent","constructor","sanitizer","dangerousUrl","trustedUrl","bypassSecurityTrustUrl","updateVideoUrl","id","dangerousVideoUrl","videoUrl","bypassSecurityTrustResourceUrl","selectors","decls","vars","consts","template","i0"],"sourceRoot":"","sources":["/Users/tkmagesh77/Documents/Training/WK-AdvAngular-Mar-2023/angular-security/src/app/bypass-security.component.ts","/Users/tkmagesh77/Documents/Training/WK-AdvAngular-Mar-2023/angular-security/src/app/bypass-security.component.html"],"sourcesContent":["import { Component } from '@angular/core';\r\nimport { DomSanitizer, SafeResourceUrl, SafeUrl } from '@angular/platform-browser';\r\n\r\n@Component({\r\n  selector: 'app-bypass-security',\r\n  templateUrl: './bypass-security.component.html',\r\n})\r\nexport class BypassSecurityComponent {\r\n  dangerousUrl: string;\r\n  trustedUrl: SafeUrl;\r\n  dangerousVideoUrl!: string;\r\n  videoUrl!: SafeResourceUrl;\r\n\r\n  constructor(private sanitizer: DomSanitizer) {\r\n    // javascript: URLs are dangerous if attacker controlled.\r\n    // Angular sanitizes them in data binding, but you can\r\n    // explicitly tell Angular to trust this value:\r\n    this.dangerousUrl = 'javascript:alert(\"Hi there\")';\r\n    this.trustedUrl = sanitizer.bypassSecurityTrustUrl(this.dangerousUrl);\r\n    this.updateVideoUrl('PUBnlbjZFAI');\r\n  }\r\n\r\n  updateVideoUrl(id: string) {\r\n    // Appending an ID to a YouTube URL is safe.\r\n    // Always make sure to construct SafeValue objects as\r\n    // close as possible to the input data so\r\n    // that it's easier to check if the value is safe.\r\n    this.dangerousVideoUrl = 'https://www.youtube.com/embed/' + id;\r\n    this.videoUrl =\r\n        this.sanitizer.bypassSecurityTrustResourceUrl(this.dangerousVideoUrl);\r\n  }\r\n}\r\n\r\n\r\n/*\r\nCopyright Google LLC. All Rights Reserved.\r\nUse of this source code is governed by an MIT-style license that\r\ncan be found in the LICENSE file at https://angular.io/license\r\n*/","<h3>Bypass Security Component</h3>\r\n\r\n<h4>An untrusted URL:</h4>\r\n<p><a class=\"e2e-dangerous-url\" [href]=\"dangerousUrl\">Click me</a></p>\r\n<h4>A trusted URL:</h4>\r\n<p><a class=\"e2e-trusted-url\" [href]=\"trustedUrl\">Click me</a></p>\r\n\r\n<h4>Resource URL:</h4>\r\n<p>Showing: {{dangerousVideoUrl}}</p>\r\n<p>Trusted:</p>\r\n<iframe class=\"e2e-iframe-trusted-src\" width=\"640\" height=\"390\" [src]=\"videoUrl\"></iframe>\r\n<p>Untrusted:</p>\r\n<iframe class=\"e2e-iframe-untrusted-src\" width=\"640\" height=\"390\" [src]=\"dangerousVideoUrl\"></iframe>\r\n\r\n\r\n<!-- \r\nCopyright Google LLC. All Rights Reserved.\r\nUse of this source code is governed by an MIT-style license that\r\ncan be found in the LICENSE file at https://angular.io/license\r\n-->"]},"metadata":{},"sourceType":"module","externalDependencies":[]}